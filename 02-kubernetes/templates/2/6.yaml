apiVersion: apps/v1
# Use the kind Deployment

metadata:
  name: db
  # Label the deployment with app: words-db

spec:
  selector:
    matchLabels:
      app: words-db
  template:
    metadata:
      # label the pods with app: words-db

    spec:
      containers:
      # name the pods db
      - name: 
        # use the image dockersamples/k8s-wordsmith-db

        ports:
        - containerPort: 5432
          name: db
---
apiVersion: v1
# Use the kind service
metadata:
  name: db
  # Label this service words-db

spec:
  ports:
    - port: 5432
      targetPort: 5432
      name: db
  # Select the pods from the deployment above. Use the app: selector for this!
  
  # Use the type ClusterIP

---
#######################################################
# Use the right apiversion and kind for deploying the second microservice


metadata:
  name: words
  # Label it with "app: words-api"
  

spec:
  # We need 5 different replicas of the container

  selector:
    matchLabels:
      # Use the same label from the templated pods
  template:
    metadata:
      # Label the pods with "words-api"


    spec:
      containers:
        # name the pods "words" and use the image dockersamples/k8s-wordsmith-api
      - 

        ports:
        - containerPort: 8080
          name: api
---
# Use the right apiversion and type for a service

metadata:
  name: words
  # Label it with "app: words-api"


spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: api
  # Use a the selector from the deployment above


  # Use the type ClusterIP
  
---
#######################################################
# Write your own Deployment object with the following attributes
#       name = web
#       label: app = words-web
# The underlying pods should have the following attributes
#       selecttor = matchlabels: app: words-web
#       labels: app = words-web
#       name = web
#       image= dockersamples/k8s-wordsmith-web
#       use containerPort = 80
#       name port = words-web


---
# Write your own Service with the following attributes:
#       name = web
#       labels: app= words-web
#       type: LoadBalancer
#       selector: app=words-web
#       ports: Container(Target) Port 80 to port 8081
#       name port web

